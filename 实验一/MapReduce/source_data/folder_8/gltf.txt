{| class= " infobox " 
 |+ class= " infobox-title "  id= " 4 "  style= " padding-bottom:0.15em; "  |glTF 
 | colspan= " 2 "  class= " infobox-image "  |[[File:GlTF_logo.svg|150x150px]] 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |[[Filename extension]] 
 | class= " infobox-data "  style= " line-height:1.35em; "  | < templatestyles src= " Mono/styles.css "  / > < div class= " monospaced " > 
 .gltf, .glb < /div > 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |[[Media type|Internet media & nbsp;type]] 
 | class= " infobox-data "  style= " line-height:1.35em; "  |model/gltf+json, model/gltf-binary 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |Developed & nbsp;by 
 | class= " infobox-data "  style= " line-height:1.35em; "  |Khronos Group 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |First release 
 | class= " infobox-data "  style= " line-height:1.35em; "  |19 & nbsp;October 2015 < span class= " noprint " > & #x3B; & #x20;8 years ago < /span > < span style= " display:none " > & nbsp;( < span class= " bday dtstart published updated " > 2015-10-19 < /span > ) < /span > 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |[[Software release life cycle|Latest release]] 
 | class= " infobox-data "  style= " line-height:1.35em; "  | < div style= " display: inline-block; line-height: 1.2em; padding: .1em 0;  " > 2.0.0 < br / > < br / > 11 & nbsp;July 2021 < span class= " noprint " > & #x3B; & #x20;2 years ago < /span > < span style= " display:none " > & nbsp;( < span class= " bday dtstart published updated " > 2021-07-11 < /span > ) < /span >   < /div > 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |Type of format 
 | class= " infobox-data "  style= " line-height:1.35em; "  |3D computer graphics 
 |- 
 ! class= " infobox-label "  scope= " row "  style= " line-height:1.2em; padding-right:0.65em; "  |Website 
 | class= " infobox-data "  style= " line-height:1.35em; "  | < span class= " url " > [https://khronos.org/gltf khronos.org/gltf] < /span > 
 |} 
 '''glTF''' is a file format for 3D models, 3D scenes, and 3D assets. It is a standard file format that can be read by many programs. A glTF file can have file extensions of .gltf ([[JSON]]/[[ASCII]]) or .glb (binary). Both .gltf and .glb files may use external resources, such as for images or mesh data. Or, both may have data embedded inside of them (as base64-encoded text in .gltf files or as raw bytes in .glb files). < ref > {{Cite web|title=glTF 2.0|url=https://docs.blender.org/manual/en/2.80/addons/io_scene_gltf2.html#file-format-variations|access-date=29 October 2020|website=blender.org}} < /ref > < ref name= " loc "  / > < ref name= " globant "  / >  glTF is an open standard developed and maintained by the Khronos Group. glTF supports 3D model geometry, appearance, scene graph hierarchy, and animation. < ref name= " loc "  / >  glTF is intended to be a simple, portable, and compatible format for 3D assets, reducing file size and runtime processing by apps. < ref name= " loc "  / > < ref name= " upload " > {{Cite web|last=Hamilton|first=Ian|title=Oculus Executive Calls For 3D Equivalent Of JPEG To Build The Metaverse|url=https://uploadvr.com/john-carmack-metaverse-gltf/|access-date=29 October 2020|website=uploadvr.com}} < /ref >  As such, its creators have called it the  " [[JPEG]] of 3D. " < ref name= " loc "  / > 
 
 == Overview == 
 The glTF format stores data primarily in JSON. The binary .glb format is still JSON data, but saved as a binary blob instead of plain text. The JSON may also contain blobs of binary data known as buffers, and use external files, for storing mesh data, images, etc. < ref name= " BasicGltfStructure " > {{Cite web|title=The Basic Structure of glTF|url=https://github.khronos.org/glTF-Tutorials/gltfTutorial/gltfTutorial_002_BasicGltfStructure.html|access-date=2023-10-03|website=glTF Tutorials|publisher=Khronos}} < /ref > 
 
 The fundamental building blocks of a glTF scene are nodes. Nodes are organized into a hierarchy. Nodes may have other nodes defined as children. Nodes may have transforms relative to their parent. Nodes may use resources, such as meshes, skins, and cameras. Meshes may refer to materials, which refer to textures, which refer to images. Scenes are defined using an array of root nodes. < ref > {{Cite web|title=Scenes and Nodes|url=https://github.khronos.org/glTF-Tutorials/gltfTutorial/gltfTutorial_004_ScenesNodes.html|access-date=2023-10-03|website=glTF Tutorials|publisher=Khronos}} < /ref > 
 
 Most of the top-level glTF properties use a flat hierarchy for storage. Nodes are saved in an array called  " nodes " , and are pointed to by index, including by other nodes. A glTF scene points to its root nodes by index. Furthermore, nodes point to meshes by index, which point to materials by index, which point to textures by index, which point to images by index. < ref name= " BasicGltfStructure "  / > 
 
 All glTF data structures can be extended using an  " extensions "  JSON property. This allows adding arbitrary JSON data to any part of the glTF. The specifics of the data are defined using an extension specification which builds on the base glTF spec. See the Extensions section for more information. < ref name= " glTF Extension Registry "  / > 
 
 == Releases == 
 
 === glTF 1.0 === 
 Members of the COLLADA working group created glTF in 2012. < ref > {{Cite web|last=Houston|first=Ben|title=glTF: Everything You Need to Know|url=https://www.threekit.com/blog/gltf-everything-you-need-to-know|access-date=29 October 2020|website=threekit.com}} < /ref >  At SIGGRAPH 2012, Khronos showed a demo of glTF, which was then called WebGL Transmissions Format (WebGL TF). < ref name= " globant " > {{Cite web|last=Simkin|first=Aliaksei|title=Behind the scene of 3D Magic|url=https://stayrelevant.globant.com/en/gltf-behind-the-scene-of-3d-magic/|access-date=29 October 2020|website=globant.com}} < /ref >  On October 19, 2015, Khronos released the glTF 1.0 specification. < ref name= " globant "  / > 
 
 ==== Adoption of glTF 1.0 ==== 
 At SIGGRAPH 2016, Oculus announced they were adopting glTF because of the similarities to their ovrscene format. < ref name= " upload "  / > < ref > {{Cite web|date=2016|title=Update|url=https://www.khronos.org/assets/uploads/developers/library/2016-siggraph/glTF-MobileVR-Oculus-BOF-Update-SIGGRAPH_Jul16.pdf|access-date=2019-06-19|website=www.khronos.org|format=PDF}} < /ref >  In October 2016, [[Microsoft]] joined the Khronos 3D Formats working group to work together on glTF. < ref > {{Cite web|date=28 October 2016|title=Bringing 3D to everyone through open standards|url=https://blogs.windows.com/buildingapps/2016/10/28/bringing-3d-to-everyone-through-open-standards/|website=Windows Developer Blog}} < /ref > 
 
 === glTF 2.0 === 
 glTF 2.0 was released in June 2017. glTF 2.0 was a huge change compared to version 1.0. Most tools adopted the 2.0 version. < ref name= " loc " > {{Cite web|title=glTF (GL Transmission Format) Family|url=https://www.loc.gov/preservation/digital/formats/fdd/fdd000498.shtml|access-date=29 October 2020|website=loc.gov}} < /ref > < ref name= " globant "  / >  Physically based rendering (PBR) was added, replacing WebGL shaders used in glTF 1.0, thanks to a proposal by Fraunhofer at SIGGRAPH 2016. < ref name= " augmania " > {{Cite web|title=glTF 2.0|url=https://www.augmania.com/gltf-2-0-perfect-3d-file-format-ar/|access-date=29 October 2020|website=augmania.com|archive-date=1 November 2020|archive-url=https://web.archive.org/web/20201101003003/https://www.augmania.com/gltf-2-0-perfect-3d-file-format-ar/|url-status=dead}} < /ref >  Changes were made to accessors and morph targets for facial animation. Top-level glTF object properties were replaced with arrays for faster index-based access. < ref > {{Cite web|title=glTF 2.0 syntax changes and JSON encoding restrictions 路 Issue #831 路 KhronosGroup/glTF|url=https://github.com/KhronosGroup/glTF/issues/831|access-date=2017-09-26|website=GitHub|language=en}} < /ref >  There were many other schema tweaks and breaking changes compared to glTF 1.0. There is ongoing work towards import and export in Unity < ref > {{Citation|title=UnityGLTF: Runtime GLTF Loader for Unity3D|date=2017-09-26|url=https://github.com/KhronosGroup/UnityGLTF|publisher=The Khronos Group|access-date=2017-09-26}} < /ref >  and an integrated multi-engine viewer / validator. < ref > {{Cite web|title=Web-based client-side preview and validation 路 Issue #1081 路 KhronosGroup/glTF|url=https://github.com/KhronosGroup/glTF/issues/1081|access-date=2017-09-26|website=GitHub|language=en}} < /ref > 
 
 ==== Adoption of glTF 2.0 ==== 
 On March 3, 2017, Microsoft announced that they will be using glTF 2.0 as the 3D asset format in their apps, including Paint 3D, 3D Viewer, Remix 3D, Babylon.js, and [[Microsoft Office]]. Sketchfab also announced support for glTF 2.0. As of 2019, the glTF and GLB formats are used by companies including DGG, UX3D, Sketchfab, [[Facebook]], Microsoft, Oculus, [[Google]], [[Adobe Inc.|Adobe]], Box, TurboSquid, [[Unreal Engine]] < ref > As of Unreal 5.1: {{Cite web|title=Importing glTF Files|url=https://docs.unrealengine.com/5.1/en-US/importing-gltf-files-into-unreal-engine/|access-date=2023-05-29|website=Unreal Engine 5.1 Documentation|publisher=Epic Games}} < /ref >  and Qt Quick 3D. < ref name= " upload "  / > < ref name= " globant "  / > < ref > {{Cite web|last=Haslam|first=Oliver|title=Adobe's new Aero app lets you create AR experiences on iPhone and iPad|url=https://www.imore.com/adobes-new-aero-app-lets-you-create-ar-experiences-iphone-and-ipad|access-date=29 October 2020|website=imore.com}} < /ref >  The glTF format is an important standard for [[augmented reality]] because it works with [[Maya (software)|Autodesk Maya]], Autodesk 3ds Max, and Poly. < ref > {{Cite web|title=glTF is a huge deal for VR + AR|url=https://www.worldviz.com/post/gltf-is-a-huge-deal-for-vr-ar-heres-why-were-embracing-it|access-date=29 October 2020|website=worldviz.com}} < /ref > < ref > {{Cite web|last=Nichols|first=Andy|title=What is new in Qt Quick 3D 6.0|url=https://www.qt.io/blog/what-is-new-in-qt-quick-3d-6.0|access-date=1 December 2022|website=Qt Blog|publisher=The Qt Company}} < /ref > 
 
 In February 2020, the [[Smithsonian Institution]] started their Open Access Initiative, releasing approximately 2.8 million 2D images and 3D models into the public domain, using glTF for the 3D models. < ref > {{Cite web|last=Burns|first=Chris|title=Smithsonian Open Access initiative releases loads of 3D models to public domain|url=https://www.slashgear.com/smithsonian-open-access-initiative-releases-loads-of-3d-models-to-public-domain-26611336/|access-date=29 October 2020|website=slashgear.com}} < /ref > 
 
 In July 2022, glTF 2.0 was released as the [[International Organization for Standardization|ISO]]/[[International Electrotechnical Commission|IEC]] 12113:2022 International Standard. < ref > {{Cite web|date=2022-07-26|title=ISO/IEC 12113:2022 Information technology|url=https://www.iso.org/standard/83990.html|website=International Organization for Standardization (ISO)|language=en-US}} < /ref >  Khronos said they will keep ISO/IEC 12113 updated with new glTF functionality to ensure that the ISO/IEC and Khronos specifications stay in sync. < ref > {{Cite web|title=Khronos glTF 2.0 released as an ISO/IEC International Standard|url=https://develop3d.com/collaborate/new-gltf-2-0-international-standard-web-3d-asset-released/|website=develop3d.com}} < /ref > 
 
 === Extensions === 
 The glTF format can be extended with arbitrary JSON to add new data and functionality. Extensions can be placed on any part of a glTF, including nodes, animations, materials, textures, and on the entire file. Khronos keeps a list of some glTF extensions on GitHub, including all official extensions from Khronos and a few third-party extensions. < ref name= " glTF Extension Registry " > {{Cite web|title=glTF Extension Registry|url=https://github.com/KhronosGroup/glTF/tree/main/extensions|access-date=2023-05-29|website=KhronosGroup/glTF on GitHub|publisher=Khronos Group}} < /ref > 
 
 * PBR extensions allow objects to look realistic, allowing developers to create 3D assets that look like real-world objects. New PBR extensions add new ways glTF objects can look. < ref > {{Cite news|date=3 December 2020|title=The glTF ecosystem adds further PBR realism for web renders|publisher=Develop 3D|url=https://develop3d.com/visualisation/the-gltf-ecosystem-adds-further-pbr-realism-for-web-renders/|access-date=20 December 2021}} < /ref > 
 
 * The KTX 2.0 extension for universal texture compression allows glTF files to store images in a way similar to native texture formats. This allows glTF files to have a reduced file size and increased rendering speed. < ref > {{Cite news|date=21 April 2021|title=Khronos KTX 2.0 Ratified: Compress Your Textures with RapidCompact|publisher=Rapid Compact|url=https://rapidcompact.com/khronos-ktx2-basis/|access-date=20 December 2021}} < /ref > 
 
 * Draco is a glTF extension for mesh compression, to compress and decompress 3D meshes. This reduces the size of glTF files. Draco compresses vertex attributes, normals, colors, and texture coordinates. < ref > {{Cite news|date=9 April 2018|title=Draco Compressed Meshes with glTF and 3D Tiles|publisher=Cesium|url=https://cesium.com/blog/2018/04/09/draco-compression/|access-date=20 December 2021}} < /ref > 
 
 * Many glTF extensions for game engine usage have been developed by OMI group. This includes extensions for physics shapes, physics bodies, physics joints, audio playback, seats, spawn points, and more. < ref > {{Cite web|title=Who we are|url=https://omigroup.org/|access-date=2023-05-29|website=Open Metaverse Interoperability Group|publisher=OMI group}} < /ref > < ref > {{Cite web|title=OMI glTF extensions|url=https://github.com/omigroup/gltf-extensions/tree/main/extensions/2.0|access-date=2023-05-29|website=omigroup/gltf-extensions on GitHub|publisher=OMI group}} < /ref > 
 
 * VRM has developed glTF extensions for human-like 3D avatars including dynamic spring bones and toon materials. < ref > {{Cite web|title=What is VRM?|url=https://vrm-consortium.org/en/|access-date=2023-05-29|website=VRM Consortium|publisher=VRM Consortium, Inc.}} < /ref > < ref > {{Cite web|title=VRM glTF extensions|url=https://github.com/vrm-c/vrm-specification/tree/master/specification|access-date=2023-05-29|website=vrm-c/vrm-specification on GitHub|publisher=VRM Consortium, Inc.}} < /ref > 
 
 == Derivative formats == 
 On August 10, 2015, 3D Tiles was built on glTF. 3D Tiles adds spatial data, metadata, and geospatial data. The geospatial data can be styled and streamed. 3D Tiles is now a proposed OGC Community Standard. < ref name= " 3dtiles " > {{Cite web|title=Cesium 3D Tiles|url=https://github.com/AnalyticalGraphicsInc/3d-tiles|publisher=}} < /ref > < ref name= " ogsrelease " > {{Cite web|title=OGC is considering a proposed work item for 3D Tiles as a Community Standard|url=http://www.opengeospatial.org/pressroom/pressreleases/2466|publisher=}} < /ref > < ref name= " 3dtilesjustification " > {{Cite web|title=3D Tiles Community Standards Justification|url=https://portal.opengeospatial.org/files/70040|publisher=}} < /ref > 
 
 VRM, a model format for VR, is built on the .glb format. < ref > {{Cite web|title=VRM specification|url=https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md|access-date=29 October 2020|website=github.com}} < /ref >  It is a 3D human avatar file format. < ref > {{Cite web|title=VRM|url=https://www.khronos.org/assets/uploads/developers/library/2019-siggraph-asia/VRM-Extending-glTF-for-Portable-Humanoid-Avatars_SIGGRAPH-Asia_Nov19.pdf|access-date=29 October 2020|website=khronos.org}} < /ref > 
 
 == Software ecosystem == 
 Khronos works on the glTF Sample Viewer to view assets, as part of the glTF Software ecosystem. Khronos also works on the Validator, which validates glTF assets. < ref > {{Cite news|date=16 June 2021|title=Khronos 3D Viewer Program|publisher=Graphic Speak|url=https://gfxspeak.com/2021/06/16/khronos-viewer-program/|access-date=20 December 2021}} < /ref > 
 
 glTF files can be used in many open-source [https://github.com/KhronosGroup/glTF#webgl-engines WebGL engines] including PlayCanvas, Three.js, Babylon.js, [http://cesiumjs.org Cesium], [https://github.com/pex-gl/pex PEX], [http://xeogl.org xeogl], and [https://aframe.io A-Frame]. The [[Godot|Godot game engine]] supports and recommends glTF files, with both import and export support. < ref > {{Cite web|title=Importing 3D scenes|url=https://docs.godotengine.org/en/stable/getting_started/workflow/assets/importing_scenes.html|access-date=2021-09-27|website=Godot Engine documentation|language=en|archive-date=2021-10-22|archive-url=https://web.archive.org/web/20211022125523/https://docs.godotengine.org/en/stable/getting_started/workflow/assets/importing_scenes.html|url-status=dead}} < /ref > < ref > {{Cite web|last=Engine|first=Godot|title=Godot Engine - Why we should all support glTF 2.0 as THE standard asset exchange format for game engines|url=https://godotengine.org/article/we-should-all-use-gltf-20-export-3d-assets-game-engines|access-date=2021-09-27|website=Godot Engine|language=en}} < /ref > 
 
 Open-source [https://github.com/KhronosGroup/glTF#converters glTF converters] allow converting from COLLADA, FBX, and OBJ. Assimp can import and export glTF. 
 
 glTF files can be exported from many 3D editors, such as [[Blender (software)|Blender]], [[Vectary]], Autodesk 3ds Max (natively or using Verge3D exporter < ref name= " antonmansson " > {{Cite web|date=|title=How to make Facebook 3D posts|url=https://www.antonmansson.com/how-to-make-facebook-3d-posts/|access-date=2018-05-07|publisher=3D Print Tech Design}} < /ref > ), [[Maya (software)|Autodesk Maya]] (using babylon.js exporter < ref > {{Cite web|title=Export Maya scene as glTF|url=https://doc.babylonjs.com/extensions/Exporters/Maya_to_glTF|access-date=2021-02-01}} < /ref > ), Autodesk Inventor, Modo, Houdini, < ref > {{Cite web|title=glTF ROP output driver|url=https://www.sidefx.com/docs/houdini/nodes/sop/rop_gltf.html|publisher=Side FX}} < /ref >  Paint 3D, [[Godot]], and [[Substance Painter]]. < ref > {{Cite web|title=GLB Tutorials|url=https://developers.facebook.com/docs/sharing/3d-posts/glb-tutorials|access-date=May 7, 2018|website=Facebook Developers|archive-date=July 29, 2019|archive-url=https://web.archive.org/web/20190729192808/https://developers.facebook.com/docs/sharing/3d-posts/glb-tutorials|url-status=dead}} < /ref > 
 
 Open-source [https://github.com/KhronosGroup/glTF#loaders-and-viewers glTF utility libraries] are available for programming languages including [[JavaScript]], [[Node.js]], [[C++]], [[C Sharp (programming language)|C#]], [[Haskell]], [[Java (programming language)|Java]], [[Go (programming language)|Go]], [[Rust (programming language)|Rust]], Haxe, [[Ada (programming language)|Ada]], and [[TypeScript]]. 
 
 3D Commerce, a standards group for 3D content in [[Electronic commerce|e-commerce]], uses glTF for realistic 3D assets. < ref > {{Cite news|date=20 July 2020|title=Think 3D|publisher=Leading Print|url=http://www.leadingprint.org/spring-2020/think-3d/|access-date=21 June 2022}} < /ref >  In June 2021, the 3D Commerce viewer certification program was launched, allowing 3D viewers to prove they can accurately and reliably display 3D products using the glTF file format. < ref > {{Cite news|date=9 June 2021|title=Khronos launches certification for 3D-animated online shopping|publisher=Venture Beat|url=https://venturebeat.com/2021/06/09/khronos-launches-certification-for-3d-animated-online-shopping/|access-date=21 June 2022}} < /ref >  3D Commerce's asset guidelines, released in 2020, include best practices for using glTF files in 3D Commerce. < ref > {{Cite news|date=19 August 2020|title=How 3D Standards Will Simplify Image Creation And Usage In Retail|publisher=Retail Touch Points|url=https://retailtouchpoints.com/topics/digital-marketing/establishing-3d-standards-will-simplify-image-creation-and-usage-in-retail|access-date=21 June 2022}} < /ref > 
 
 == See also == 
 
 * COLLADA 
 * Open Game Engine Exchange 
 * [[JSON]] 
 * Alembic (computer graphics) 
 * Universal Scene Description 
 
 == References == 
 {{Reflist}} 
 
 == External links == 
 
 * {{Official website|https://www.khronos.org/gltf}} 
 * [https://github.com/KhronosGroup/glTF/blob/master/specification/README.md glTF specification] 
 [[Category:Cross-platform software]]